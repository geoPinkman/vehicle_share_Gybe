/*
 * This file is generated by jOOQ.
 */
package com.greenGekko.database.tables.records;


import com.greenGekko.database.tables.VehiclePictures;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehiclePicturesRecord extends UpdatableRecordImpl<VehiclePicturesRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.vehicle_pictures.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.vehicle_pictures.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.vehicle_pictures.vehicle_id</code>.
     */
    public void setVehicleId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.vehicle_pictures.vehicle_id</code>.
     */
    public Integer getVehicleId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.vehicle_pictures.picture_url</code>.
     */
    public void setPictureUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.vehicle_pictures.picture_url</code>.
     */
    public String getPictureUrl() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return VehiclePictures.VEHICLE_PICTURES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return VehiclePictures.VEHICLE_PICTURES.VEHICLE_ID;
    }

    @Override
    public Field<String> field3() {
        return VehiclePictures.VEHICLE_PICTURES.PICTURE_URL;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVehicleId();
    }

    @Override
    public String component3() {
        return getPictureUrl();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVehicleId();
    }

    @Override
    public String value3() {
        return getPictureUrl();
    }

    @Override
    public VehiclePicturesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public VehiclePicturesRecord value2(Integer value) {
        setVehicleId(value);
        return this;
    }

    @Override
    public VehiclePicturesRecord value3(String value) {
        setPictureUrl(value);
        return this;
    }

    @Override
    public VehiclePicturesRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VehiclePicturesRecord
     */
    public VehiclePicturesRecord() {
        super(VehiclePictures.VEHICLE_PICTURES);
    }

    /**
     * Create a detached, initialised VehiclePicturesRecord
     */
    public VehiclePicturesRecord(Integer id, Integer vehicleId, String pictureUrl) {
        super(VehiclePictures.VEHICLE_PICTURES);

        setId(id);
        setVehicleId(vehicleId);
        setPictureUrl(pictureUrl);
    }
}
